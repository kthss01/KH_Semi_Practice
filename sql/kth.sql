CREATE USER KH_SEMI IDENTIFIED BY KH_SEMI; -- 공용 계정 생성
GRANT RESOURCE, CONNECT TO KH_SEMI; -- 권한 설정
GRANT CREATE VIEW TO KH_SEMI; -- View 권한 추가 설정

-- Recruit Part DB 구축 -------------------------------------------------------
------------------------------------------------------------------------------

-- Recruitment Table ---------------------------------------------------------
CREATE TABLE RECRUITMENT (
    R_TITLE VARCHAR(30) PRIMARY KEY,
    R_CODE VARCHAR(30),
    R_START DATE,
    R_END DATE,
    R_TIME VARCHAR(20),
    R_CONTENT1 VARCHAR(1024),
    R_CONTENT2 VARCHAR(1024),
    R_CONTENT3 VARCHAR(1024),
    R_CONTENT4 VARCHAR(1024),
    R_CONTENT5 VARCHAR(1024),
    R_CONTENT6 VARCHAR(1024)
);

DESC RECRUITMENT;

COMMENT ON COLUMN RECRUITMENT.R_TITLE IS '공고명';
COMMENT ON COLUMN RECRUITMENT.R_CODE IS '직무구분';
COMMENT ON COLUMN RECRUITMENT.R_START IS '공고시작일';
COMMENT ON COLUMN RECRUITMENT.R_END IS '공고종료일';
COMMENT ON COLUMN RECRUITMENT.R_TIME IS '공고종류';
COMMENT ON COLUMN RECRUITMENT.R_CONTENT1 IS '공고소개';
COMMENT ON COLUMN RECRUITMENT.R_CONTENT2 IS '주요업무';
COMMENT ON COLUMN RECRUITMENT.R_CONTENT3 IS '자격요건';
COMMENT ON COLUMN RECRUITMENT.R_CONTENT4 IS '우대사항';
COMMENT ON COLUMN RECRUITMENT.R_CONTENT5 IS '혜택및복지';
COMMENT ON COLUMN RECRUITMENT.R_CONTENT6 IS '기타사항';

ALTER TABLE RECRUITMENT 
MODIFY (R_CODE NOT NULL, R_START NOT NULL, R_END NOT NULL, R_TIME NOT NULL);

-- 수정사항 공고번호로 PRIMARY KEY 변경

-- 공고명 PRIMARY KEY 삭제, 먼저 RECRUIT_STATUS 에서 R_TITLE 삭제해야함
ALTER TABLE RECRUITMENT
DROP CONSTRAINT SYS_C007339; 

-- 공고번호 열 추가 primary key
ALTER TABLE RECRUITMENT
ADD R_ID NUMBER PRIMARY KEY;

COMMENT ON COLUMN RECRUITMENT.R_ID IS '공고번호';

-- 공고 테이블 컬럼 순서 변경 -> 안하기로 함 
ALTER TABLE RECRUITMENT2 RENAME TO RECRUITMENT;

-- 직무구분 PK 추가
ALTER TABLE RECRUITMENT
ADD CONSTRAINT FK_R_CODE FOREIGN KEY(R_CODE) REFERENCES RECRUITCODE(R_CODE);

-- RecruitMember Table ---------------------------------------------------------
CREATE TABLE RECRUIT_MEMBER (
    RM_ID NUMBER PRIMARY KEY,
    RM_NAME VARCHAR(30),
    RM_PHONE VARCHAR(30),
    RM_EDUCATION VARCHAR(100),
    RM_CAREER VARCHAR(200),
    RM_EMAIL VARCHAR(50),
    RM_PASSWORD VARCHAR(30)
);

DESC RECRUIT_MEMBER;

COMMENT ON COLUMN RECRUIT_MEMBER.RM_ID IS '지원자번호';
COMMENT ON COLUMN RM_NAME.RM_ID IS '성명';
COMMENT ON COLUMN RECRUIT_MEMBER.RM_PHONE IS '연락처';
COMMENT ON COLUMN RECRUIT_MEMBER.RM_EDUCATION IS '학력사항';
COMMENT ON COLUMN RECRUIT_MEMBER.RM_CAREER IS '경력사항';
COMMENT ON COLUMN RECRUIT_MEMBER.RM_EMAIL IS '이메일';
COMMENT ON COLUMN RECRUIT_MEMBER.RM_PASSWORD IS '비밀번호';

ALTER TABLE RECRUIT_MEMBER 
MODIFY (RM_NAME NOT NULL, RM_PHONE NOT NULL, RM_EDUCATION NOT NULL, 
RM_CAREER NOT NULL, RM_EMAIL NOT NULL, RM_PASSWORD NOT NULL);

-- RecruitStatus Table ---------------------------------------------------------
DROP TABLE RECRUIT_STATUS;

CREATE TABLE RECRUIT_STATUS (
    RS_ID NUMBER PRIMARY KEY,
    RS_STATE VARCHAR(20)
);

COMMENT ON COLUMN RECRUIT_STATUS.RS_ID IS '지원번호';
COMMENT ON COLUMN RECRUIT_STATUS.RS_STATE IS '지원상태';

ALTER TABLE RECRUIT_STATUS 
ADD R_TITLE VARCHAR(30);

ALTER TABLE RECRUIT_STATUS 
ADD CONSTRAINT FK_R_TITLE FOREIGN KEY(R_TITLE) REFERENCES RECRUITMENT(R_TITLE);

ALTER TABLE RECRUIT_STATUS 
ADD RM_ID NUMBER;

ALTER TABLE RECRUIT_STATUS 
ADD CONSTRAINT FK_RS_ID FOREIGN KEY(RM_ID) REFERENCES RECRUIT_MEMBER(RM_ID);

ALTER TABLE RECRUIT_STATUS
RENAME CONSTRAINT FK_RS_ID TO FK_RS_RM_ID;

COMMENT ON COLUMN RECRUIT_STATUS.R_TITLE IS '공고명';
COMMENT ON COLUMN RECRUIT_STATUS.RM_ID IS '지원자번호';

-- 수정사항 RECRUIT_STATUS 공고번호로 외래키 추가
-- RECRUIT_STATUS 공고명 제거
ALTER TABLE RECRUIT_STATUS
DROP COLUMN R_TITLE CASCADE CONSTRAINTS;
-- RECRUIT_STATUS 공고번호 외래키로 추가
ALTER TABLE RECRUIT_STATUS
ADD R_ID NUMBER
ADD CONSTRAINT FK_R_ID FOREIGN KEY(R_ID) REFERENCES RECRUITMENT(R_ID);

COMMENT ON COLUMN RECRUIT_STATUS.R_ID IS '공고번호';

-- Attachment Table ---------------------------------------------------------
CREATE TABLE ATTACHMENT (
    FILE_NO NUMBER PRIMARY KEY,
    REF_NO NUMBER,
    ORIGIN_NAME VARCHAR(200),
    CHANGE_NAME VARCHAR(200),
    UPLOAD_DATE DATE,
    FILE_PATH VARCHAR(1000)
);

COMMENT ON COLUMN ATTACHMENT.FILE_NO IS '파일번호';
COMMENT ON COLUMN ATTACHMENT.REF_NO IS '참조파트번호'; -- 1 공고 2 강의 3 펀딩 4 회원
COMMENT ON COLUMN ATTACHMENT.ORIGIN_NAME IS '파일원본명';
COMMENT ON COLUMN ATTACHMENT.CHANGE_NAME IS '파일수정명';
COMMENT ON COLUMN ATTACHMENT.UPLOAD_DATE IS '업로드일';
COMMENT ON COLUMN ATTACHMENT.FILE_PATH IS '저장폴더경로';


-- Portfolio Table ---------------------------------------------------------
DROP TABLE PORTFOLIO;

CREATE TABLE PORTFOLIO (
    P_NO NUMBER PRIMARY KEY,
    FILE_NO NUMBER,
    RM_ID NUMBER,
    CONSTRAINT FK_FILE_NO FOREIGN KEY(FILE_NO) REFERENCES ATTACHMENT(FILE_NO),
    CONSTRAINT FK_RM_ID FOREIGN KEY(RM_ID) REFERENCES RECRUIT_MEMBER(RM_ID)
);

--COMMENT ON COLUMN PORTFOLIO.P_NO IS '첨부파일번호';
COMMENT ON COLUMN PORTFOLIO.P_NO IS '포트폴리오번호';
COMMENT ON COLUMN PORTFOLIO.FILE_NO IS '파일번호';
COMMENT ON COLUMN PORTFOLIO.RM_ID IS '지원자번호';


-- 공고 종류 테이블 R_CODE에 대한 테이블
-- RecruitCode Table -------------------------------------------------------

CREATE TABLE RECRUITCODE (
    R_CODE VARCHAR(30) PRIMARY KEY
);

COMMENT ON COLUMN RECRUITCODE.R_CODE IS '직무구분';

INSERT INTO RECRUITCODE VALUES ('신입');
INSERT INTO RECRUITCODE VALUES ('개발직군');

CREATE SEQUENCE SEQ_RM_NO;
CREATE SEQUENCE SEQ_RS_NO;
CREATE SEQUENCE SEQ_P_NO;
CREATE SEQUENCE SEQ_R_ID;
CREATE SEQUENCE SEQ_AT_NO;

-- 시퀀스 이름 NO -> ID로 변경
RENAME SEQ_RS_NO TO SEQ_RS_ID;
RENAME SEQ_RM_NO TO SEQ_RM_ID;

-- 시퀀스 초기화 방법
-- 삭제 후 생성
DROP SEQUENCE SEQ_P_NO;
CREATE SEQUENCE SEQ_P_NO;

-- 권한 없을 때 -> 안됨 뭔가 문제있는듯
--SELECT SEQ_P_NO.NEXTVAL FROM DUAL; -- 3까지 바꿈
---- 시퀀스 현재 값 확인
--SELECT LAST_NUMBER FROM USER_SEQUENCES WHERE SEQUENCE_NAME = 'SEQ_P_NO';
---- cache있으면 CURRVAL과 차이남 CURRVAL로 조회하는게 좋음
--SELECT SEQ_P_NO.CURRVAL FROM DUAL;
---- 시퀀스의 INCREMENT를 현재 값 - 1만큼 빼도록 설정 (LAST_NUMBER가 현재값 : 21, CURRVAL : 3)
--ALTER SEQUENCE SEQ_P_NO INCREMENT BY -2; -- 현재값3이면 -2
---- 시퀀스에서 다음 값 가져오기
--SELECT SEQ_P_NO.NEXTVAL FROM DUAL;
---- 시퀀스의 증가값 복구
--ALTER SEQUENCE SEQ_P_NO.INCREMENT BY 1;

-- 기타
-- 오라클 버전 확인
SELECT * FROM PRODUCT_COMPONENT_VERSION;

-- DML 작성 --------------------------------------------------------------------

-- 공고 등록
INSERT INTO RECRUITMENT VALUES 
('title', 'code', SYSDATE, SYSDATE, 'time', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', SEQ_R_ID.NEXTVAL);

-- insertRecruitment
-- INSERT INTO RECRUITMENT VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, SEQ_R_ID.NEXTVAL)

SELECT * FROM RECRUITMENT;
DELETE FROM RECRUITMENT;
DROP SEQUENCE SEQ_R_ID;
CREATE SEQUENCE SEQ_R_ID;

-- 공고 지원 등록
INSERT INTO RECRUIT_MEMBER VALUES
(SEQ_RM_ID.NEXTVAL, 'name', 'phone', 'education', 'career', 'email', 'password');

-- insertRecruitMemeber
-- INSERT INTO RECRUIT_MEMBER VALUES (SEQ_RM_ID.NEXTVAL, ?, ?, ?, ?, ?, ?)

SELECT * FROM RECRUIT_MEMBER;

DELETE FROM RECRUIT_MEMBER;
DROP SEQUENCE SEQ_RM_ID;
CREATE SEQUENCE SEQ_RM_ID;

-- 공고 지원자 첨부파일 추가
INSERT INTO ATTACHMENT VALUES
(SEQ_At_NO, 1, 'test.jpg', 'test.jpg', SYSDATE, 'path');

SELECT * FROM ATTACHMENT;
DELETE FROM ATTACHMENT;
DROP SEQUENCE SEQ_AT_NO;
CREATE SEQUENCE SEQ_AT_NO;

-- insertAttachment
-- INSERT INTO ATTACHMENT VALUES (SEQ_P_NO.NEXTVAL, ?, ?, ?, SYSDATE, ?)

-- 포트폴리오에 첨부파일 추가
INSERT INTO PORTFOLIO VALUES (SEQ_P_NO.NEXTVAL, 1 , 1);

-- insertPortfolio
-- INSERT INTO PORTFOLIO VALUES (SEQ_P_NO.NEXTVAL, ? , ?)

SELECT * FROM PORTFOLIO;
DELETE FROM PORTFOLIO;
DROP SEQUENCE SEQ_P_NO;
CREATE SEQUENCE SEQ_P_NO;

-- 공고 조회

-- 공고 리스트 조회
-- 가장 최근 기준으로 일정 갯수만
SELECT * FROM (SELECT ROWNUM, A.* FROM RECRUITMENT A ORDER BY R_ID DESC) WHERE ROWNUM BETWEEN 1 AND 5;

-- selectList
-- SELECT * FROM (SELECT ROWNUM, A.* FROM RECRUITMENT A ORDER BY R_ID DESC) WHERE ROWNUM BETWEEN ? AND ?

-- 공고 지원자 첨부파일 조회

SELECT A.* 
FROM Attachment A, Portfolio P
WHERE 1=1
AND P.FIlE_NO = A.FILE_NO
AND P.RM_ID = 1;

-- selectPortfolio
-- SELECT A.* FROM Attachment A, Portfolio P WHERE P.FILE_NO = A.FILE_NO AND P.RM_ID = ?

-- 추후 구현 필요한거
-- 공고에 공고 지원자 등록
-- 공고에 등록한 공고 지원자 조회

-- 공고 CODE 추가
INSERT INTO RECRUITCODE VALUES ('마케팅');
INSERT INTO RECRUITCODE VALUES ('광고사업');
-- insertRecruitCode
-- INSERT INTO RECRUITCODE VALUES (?)

-- 공고 CODE 조회
SELECT * FROM RECRUITCODE;
-- selectRecruitCode
-- SELECT * FROM RECRUITCODE

-- 공고 CODE 조회 및 그룹별 갯수
SELECT A.R_CODE R_CODE, COUNT(*) COUNT
FROM RECRUITCODE A, RECRUITMENT B 
WHERE A.R_CODE = B.R_CODE
GROUP BY A.R_CODE;

-- selectRecruitCodeWithCount
-- SELECT A.R_CODE, COUNT(*) FROM RECRUITCODE A, RECRUITMENT B WHERE A.R_CODE = B.R_CODE GROUP BY A.R_CODE

---- DML query 정리 ------------------------------------------------

----- Recruitment -----
-- insertRecruitment
-- INSERT INTO RECRUITMENT VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, SEQ_R_ID.NEXTVAL)

-- selectRecruitment
-- SELECT * FROM RECRUITMENT WHERE R_ID = ?
SELECT * FROM RECRUITMENT WHERE R_ID = 6;

-- selectList
-- SELECT * FROM (SELECT ROWNUM RNUM, A.* FROM RECRUITMENT A ORDER BY R_ID DESC) WHERE RNUM BETWEEN ? AND ?
SELECT * FROM (SELECT ROWNUM RNUM, A.* FROM RECRUITMENT A ORDER BY R_ID DESC) WHERE RNUM BETWEEN 6 AND 10;

-- getListCount
SELECT COUNT(*) FROM RECRUITMENT;

----- RecruitMember -----
-- insertRecruitMemeber
-- INSERT INTO RECRUIT_MEMBER VALUES (SEQ_RM_ID.NEXTVAL, ?, ?, ?, ?, ?, ?)

----- Attachment -----
-- insertAttachment
-- INSERT INTO ATTACHMENT VALUES (SEQ_P_NO.NEXTVAL, ?, ?, ?, SYSDATE, ?)

----- Portfolio -----
-- insertPortfolio
-- INSERT INTO PORTFOLIO VALUES (SEQ_P_NO.NEXTVAL, ? , ?)

-- selectPortfolio
-- SELECT A.* FROM Attachment A, Portfolio P WHERE P.FILE_NO = A.FILE_NO AND P.RM_ID = ?

----- RecruitCode -----
-- insertRecruitCode
-- INSERT INTO RECRUITCODE VALUES (?)

-- selectRecruitCode
-- SELECT A.R_CODE R_CODE, COUNT(*) COUNT FROM RECRUITCODE A, RECRUITMENT B WHERE A.R_CODE = B.R_CODE GROUP BY A.R_CODE